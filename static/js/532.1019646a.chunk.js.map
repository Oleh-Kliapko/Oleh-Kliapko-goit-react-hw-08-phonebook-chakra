{"version":3,"file":"static/js/532.1019646a.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/avatar/dist/chunk-QVBG3QXJ.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-XLTSJSZV.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-ZXZNYCCD.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-RBT32FI6.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-MASXGPYE.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/icons/dist/chunk-NIMLFBFN.mjs","../node_modules/@chakra-ui/icon/dist/chunk-QODHG6BI.mjs","components/ContactItem/ContactItem.jsx","pages/Contacts.jsx"],"sourcesContent":["// src/avatar-context.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\nexport {\n  AvatarStylesProvider,\n  useAvatarStyles\n};\n","import {\n  useAvatarStyles\n} from \"./chunk-QVBG3QXJ.mjs\";\n\n// src/avatar-name.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction initials(name) {\n  const [firstName, lastName] = name.split(\" \");\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ jsx(chakra.div, { role: \"img\", \"aria-label\": name, ...rest, __css: styles.label, children: name ? getInitials == null ? void 0 : getInitials(name) : null });\n}\nAvatarName.displayName = \"AvatarName\";\n\nexport {\n  initials,\n  AvatarName\n};\n","// src/generic-avatar-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar GenericAvatarIcon = (props) => /* @__PURE__ */ jsxs(\n  chakra.svg,\n  {\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\",\n    ...props,\n    children: [\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n        }\n      )\n    ]\n  }\n);\n\nexport {\n  GenericAvatarIcon\n};\n","import {\n  AvatarName\n} from \"./chunk-XLTSJSZV.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy\n  } = props;\n  const status = useImage({ src, onError, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ jsx(\n      AvatarName,\n      {\n        className: \"chakra-avatar__initials\",\n        getInitials,\n        name\n      }\n    ) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      src,\n      srcSet,\n      alt: name,\n      onLoad,\n      referrerPolicy,\n      className: \"chakra-avatar__img\",\n      loading,\n      __css: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius\n      }\n    }\n  );\n}\nAvatarImage.displayName = \"AvatarImage\";\n\nexport {\n  AvatarImage\n};\n","import {\n  AvatarImage\n} from \"./chunk-RBT32FI6.mjs\";\nimport {\n  initials\n} from \"./chunk-XLTSJSZV.mjs\";\nimport {\n  AvatarStylesProvider\n} from \"./chunk-QVBG3QXJ.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport {\n  baseStyle,\n  Avatar\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/Phone.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  PhoneIcon\n};\n","import {\n  Icon\n} from \"./chunk-DKFDJSXF.mjs\";\n\n// src/create-icon.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = Children.toArray(options.path);\n  const Comp = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, viewBox, ...defaultProps, ...props, children: path.length ? path : /* @__PURE__ */ jsx(\"path\", { fill: \"currentColor\", d: pathDefinition }) }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n\nexport {\n  createIcon\n};\n","import { Avatar, Text, Flex, Button, useColorMode } from '@chakra-ui/react';\nimport { PhoneIcon } from '@chakra-ui/icons';\n\nexport const ContactItem = ({ contacts }) => {\n  const { colorMode } = useColorMode();\n  const {\n    // id,\n    name,\n    number,\n  } = contacts;\n\n  return (\n    <Flex\n      p={3}\n      gap={7}\n      boxShadow=\"lg\"\n      minW=\"260px\"\n      bg={colorMode === 'dark' ? 'gray.600' : 'gray.100'}\n    >\n      <Avatar name={name} src=\"\" />\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\" gap={2}>\n        <Text fontSize=\"xl\" as=\"b\">\n          {name}\n        </Text>\n        <Text as=\"samp\" fontSize=\"lg\">\n          {<PhoneIcon />} {number}\n        </Text>\n        <Button\n          type=\"button\"\n          colorScheme=\"teal\"\n          size=\"sm\"\n          //   onClick={() => deleteContact(id)}\n        >\n          Delete contact\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex } from '@chakra-ui/react';\nimport ContactItem from 'components/ContactItem';\n\nconst contacts = {\n  items: [\n    { id: 'id-1', name: 'Oleh Kliapko', number: '333-33-33' },\n    { id: 'id-2', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-3', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-4', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-5', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n};\n\nconst Contacts = () => {\n  const { items } = contacts;\n\n  return (\n    <Flex p={7} pt=\"120px\" gap={5} flexWrap=\"wrap\">\n      {items.map(item => (\n        <ContactItem key={item.id} contacts={item} />\n      ))}\n    </Flex>\n  );\n};\n\nexport default Contacts;\n"],"names":["createContext","name","hookName","providerName","AvatarStylesProvider","useAvatarStyles","initials","split","firstName","lastName","charAt","AvatarName","props","getInitials","rest","styles","jsx","chakra","role","__css","label","children","displayName","GenericAvatarIcon","jsxs","viewBox","color","width","height","className","fill","d","AvatarImage","src","srcSet","onError","onLoad","borderRadius","loading","iconLabel","icon","ignoreFallback","referrerPolicy","status","useImage","cloneElement","alt","objectFit","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","forwardRef","ref","useMultiStyleConfig","useState","isLoaded","setIsLoaded","omitThemingProps","showBorder","onLoadProp","borderColor","avatarStyles","borderWidth","container","cx","dataAttr","value","callAllHandlers","Text","useStyleConfig","align","decoration","casing","aliasedProps","compact","textDecoration","PhoneIcon","options","pathDefinition","defaultProps","path","Children","Comp","Icon","length","createIcon","ContactItem","contacts","colorMode","useColorMode","number","p","gap","boxShadow","minW","bg","flexDirection","fontSize","as","type","colorScheme","size","id","items","pt","flexWrap","map","item"],"sourceRoot":""}