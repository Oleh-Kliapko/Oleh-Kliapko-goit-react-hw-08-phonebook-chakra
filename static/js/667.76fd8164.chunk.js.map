{"version":3,"file":"static/js/667.76fd8164.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/icons/dist/chunk-4OBCEWIY.mjs","components/FormItems/FormItems.jsx","pages/Register.jsx"],"sourcesContent":["// src/Star.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar StarIcon = createIcon({\n  d: \"M23.555,8.729a1.505,1.505,0,0,0-1.406-.98H16.062a.5.5,0,0,1-.472-.334L13.405,1.222a1.5,1.5,0,0,0-2.81,0l-.005.016L8.41,7.415a.5.5,0,0,1-.471.334H1.85A1.5,1.5,0,0,0,.887,10.4l5.184,4.3a.5.5,0,0,1,.155.543L4.048,21.774a1.5,1.5,0,0,0,2.31,1.684l5.346-3.92a.5.5,0,0,1,.591,0l5.344,3.919a1.5,1.5,0,0,0,2.312-1.683l-2.178-6.535a.5.5,0,0,1,.155-.543l5.194-4.306A1.5,1.5,0,0,0,23.555,8.729Z\",\n  displayName: \"StarIcon\"\n});\n\nexport {\n  StarIcon\n};\n","import {\n  FormLabel,\n  Input,\n  FormHelperText,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { AtSignIcon, LockIcon, StarIcon } from '@chakra-ui/icons';\n\nexport const FormItems = ({ type, helper }) => {\n  const { colorMode } = useColorMode();\n  const shadow = colorMode === 'dark' ? 'dark-lg' : 'md';\n\n  let icon;\n\n  switch (type) {\n    case 'name':\n      icon = <StarIcon color=\"gray.600\" mb={1} />;\n      break;\n    case 'email':\n      icon = <AtSignIcon color=\"gray.600\" mb={1} />;\n      break;\n    case 'password':\n      icon = <LockIcon color=\"gray.600\" mb={1} />;\n      break;\n    default:\n      return;\n  }\n\n  return (\n    <FormLabel htmlFor={type}>\n      {icon}\n      {type}\n      <Input shadow={shadow} />\n      <FormHelperText fontSize={12} color=\"teal.500\" mt={1}>\n        {helper}\n      </FormHelperText>\n    </FormLabel>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormHelperText,\n  Button,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { AtSignIcon, LockIcon, StarIcon } from '@chakra-ui/icons';\nimport authOperations from 'redux/auth/authOperations';\nimport FormItems from 'components/FormItems';\n\nconst Register = () => {\n  const schema = yup\n    .object({\n      name: yup.string().required(),\n      email: yup.string().email().nullable().required(),\n      password: yup.string().required(),\n    })\n    .required();\n\n  const { register, handleSubmit, reset } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = ({ name, email, password }) => {\n    dispatch(authOperations.register({ name, email, password }));\n    reset();\n  };\n\n  const { colorMode } = useColorMode();\n  const shadow = colorMode === 'dark' ? 'dark-lg' : 'md';\n\n  return (\n    <FormControl\n      as=\"form\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      w=\"70vw\"\n      gap={5}\n      p={7}\n      onSubmit={handleSubmit(onFormSubmit)}\n    >\n      <FormItems\n        type=\"name\"\n        helper=\"Name may contain only letters, apostrophe and spaces\"\n      />\n      <FormLabel htmlFor=\"name\">\n        <StarIcon color=\"gray.600\" mb={1} /> Name\n        <Input shadow={shadow} {...register('name', { required: true })} />\n        <FormHelperText fontSize={12} color=\"teal.500\" mt={1}>\n          Name may contain only letters, apostrophe and spaces\n        </FormHelperText>\n      </FormLabel>\n      <FormLabel htmlFor=\"email\">\n        <AtSignIcon color=\"gray.600\" mb={1} /> E-mail\n        <Input\n          type=\"email\"\n          shadow={shadow}\n          {...register('email', { required: true })}\n        />\n        <FormHelperText fontSize={12} color=\"teal.500\" mt={1}>\n          Email must be valid and contain @\n        </FormHelperText>\n      </FormLabel>\n      <FormLabel htmlFor=\"password\">\n        <LockIcon color=\"gray.600\" mb={1} /> Password\n        <Input\n          type=\"password\"\n          shadow={shadow}\n          {...register('password', { required: true })}\n        />\n        <FormHelperText fontSize={12} color=\"teal.500\" mt={1}>\n          Password must be at least 7 characters long\n        </FormHelperText>\n      </FormLabel>\n      <Button\n        type=\"submit\"\n        w={48}\n        shadow={shadow}\n        bg={colorMode === 'dark' ? 'teal.500' : 'teal.200'}\n      >\n        SIGN UP\n      </Button>\n    </FormControl>\n  );\n};\n\nexport default Register;\n"],"names":["StarIcon","createIcon","d","displayName","FormItems","_ref","icon","type","helper","shadow","useColorMode","colorMode","_jsx","color","mb","AtSignIcon","LockIcon","_jsxs","FormLabel","htmlFor","children","Input","FormHelperText","fontSize","mt","schema","yup","name","required","email","nullable","password","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","dispatch","useDispatch","FormControl","as","display","flexDirection","w","gap","p","onSubmit","authOperations","_objectSpread","Button","bg"],"sourceRoot":""}